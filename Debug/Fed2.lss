
Fed2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000009ca  00000a5e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  0080012a  0080012a  00000a88  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a88  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ae4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000144f  00000000  00000000  00000bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d19  00000000  00000000  0000204b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000806  00000000  00000000  00002d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  0000356c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006a2  00000000  00000000  0000372c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000665  00000000  00000000  00003dce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00004433  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
   6:	00 00       	nop
   8:	62 c0       	rjmp	.+196    	; 0xce <__bad_interrupt>
   a:	00 00       	nop
   c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
   e:	00 00       	nop
  10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
  12:	00 00       	nop
  14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
  16:	00 00       	nop
  18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
  1a:	00 00       	nop
  1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
  1e:	00 00       	nop
  20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
  22:	00 00       	nop
  24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
  26:	00 00       	nop
  28:	52 c0       	rjmp	.+164    	; 0xce <__bad_interrupt>
  2a:	00 00       	nop
  2c:	50 c0       	rjmp	.+160    	; 0xce <__bad_interrupt>
  2e:	00 00       	nop
  30:	4e c0       	rjmp	.+156    	; 0xce <__bad_interrupt>
  32:	00 00       	nop
  34:	4c c0       	rjmp	.+152    	; 0xce <__bad_interrupt>
  36:	00 00       	nop
  38:	4a c0       	rjmp	.+148    	; 0xce <__bad_interrupt>
  3a:	00 00       	nop
  3c:	48 c0       	rjmp	.+144    	; 0xce <__bad_interrupt>
  3e:	00 00       	nop
  40:	52 c1       	rjmp	.+676    	; 0x2e6 <__vector_16>
  42:	00 00       	nop
  44:	44 c0       	rjmp	.+136    	; 0xce <__bad_interrupt>
  46:	00 00       	nop
  48:	42 c0       	rjmp	.+132    	; 0xce <__bad_interrupt>
  4a:	00 00       	nop
  4c:	40 c0       	rjmp	.+128    	; 0xce <__bad_interrupt>
  4e:	00 00       	nop
  50:	3e c0       	rjmp	.+124    	; 0xce <__bad_interrupt>
  52:	00 00       	nop
  54:	3c c0       	rjmp	.+120    	; 0xce <__bad_interrupt>
  56:	00 00       	nop
  58:	3a c0       	rjmp	.+116    	; 0xce <__bad_interrupt>
  5a:	00 00       	nop
  5c:	38 c0       	rjmp	.+112    	; 0xce <__bad_interrupt>
  5e:	00 00       	nop
  60:	36 c0       	rjmp	.+108    	; 0xce <__bad_interrupt>
  62:	00 00       	nop
  64:	34 c0       	rjmp	.+104    	; 0xce <__bad_interrupt>
  66:	00 00       	nop
  68:	32 c0       	rjmp	.+100    	; 0xce <__bad_interrupt>
  6a:	00 00       	nop
  6c:	30 c0       	rjmp	.+96     	; 0xce <__bad_interrupt>
  6e:	00 00       	nop
  70:	2e c0       	rjmp	.+92     	; 0xce <__bad_interrupt>
  72:	00 00       	nop
  74:	2c c0       	rjmp	.+88     	; 0xce <__bad_interrupt>
  76:	00 00       	nop
  78:	2a c0       	rjmp	.+84     	; 0xce <__bad_interrupt>
  7a:	00 00       	nop
  7c:	28 c0       	rjmp	.+80     	; 0xce <__bad_interrupt>
  7e:	00 00       	nop
  80:	26 c0       	rjmp	.+76     	; 0xce <__bad_interrupt>
  82:	00 00       	nop
  84:	24 c0       	rjmp	.+72     	; 0xce <__bad_interrupt>
  86:	00 00       	nop
  88:	22 c0       	rjmp	.+68     	; 0xce <__bad_interrupt>
  8a:	00 00       	nop
  8c:	20 c0       	rjmp	.+64     	; 0xce <__bad_interrupt>
  8e:	00 00       	nop
  90:	1e c0       	rjmp	.+60     	; 0xce <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	ea ec       	ldi	r30, 0xCA	; 202
  a8:	f9 e0       	ldi	r31, 0x09	; 9
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	aa 32       	cpi	r26, 0x2A	; 42
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	aa e2       	ldi	r26, 0x2A	; 42
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	ab 33       	cpi	r26, 0x3B	; 59
  c6:	b2 07       	cpc	r27, r18
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	8f d0       	rcall	.+286    	; 0x1ea <main>
  cc:	7c c4       	rjmp	.+2296   	; 0x9c6 <_exit>

000000ce <__bad_interrupt>:
  ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <lcd_enable_pulse>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d0:	88 b1       	in	r24, 0x08	; 8
  d2:	88 60       	ori	r24, 0x08	; 8
  d4:	88 b9       	out	0x08, r24	; 8
  d6:	82 e0       	ldi	r24, 0x02	; 2
  d8:	8a 95       	dec	r24
  da:	f1 f7       	brne	.-4      	; 0xd8 <lcd_enable_pulse+0x8>
  dc:	00 c0       	rjmp	.+0      	; 0xde <lcd_enable_pulse+0xe>
  de:	88 b1       	in	r24, 0x08	; 8
  e0:	87 7f       	andi	r24, 0xF7	; 247
  e2:	88 b9       	out	0x08, r24	; 8
  e4:	08 95       	ret

000000e6 <lcd_init>:
  e6:	cf 93       	push	r28
  e8:	df 93       	push	r29
  ea:	2f e7       	ldi	r18, 0x7F	; 127
  ec:	88 e3       	ldi	r24, 0x38	; 56
  ee:	91 e0       	ldi	r25, 0x01	; 1
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	90 40       	sbci	r25, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <lcd_init+0xa>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <lcd_init+0x14>
  fa:	00 00       	nop
  fc:	80 e3       	ldi	r24, 0x30	; 48
  fe:	88 b9       	out	0x08, r24	; 8
 100:	e7 df       	rcall	.-50     	; 0xd0 <lcd_enable_pulse>
 102:	2a e6       	ldi	r18, 0x6A	; 106
 104:	2a 95       	dec	r18
 106:	f1 f7       	brne	.-4      	; 0x104 <lcd_init+0x1e>
 108:	00 c0       	rjmp	.+0      	; 0x10a <lcd_init+0x24>
 10a:	d0 e2       	ldi	r29, 0x20	; 32
 10c:	d8 b9       	out	0x08, r29	; 8
 10e:	e0 df       	rcall	.-64     	; 0xd0 <lcd_enable_pulse>
 110:	c0 e8       	ldi	r28, 0x80	; 128
 112:	c8 b9       	out	0x08, r28	; 8
 114:	dd df       	rcall	.-70     	; 0xd0 <lcd_enable_pulse>
 116:	8a e6       	ldi	r24, 0x6A	; 106
 118:	8a 95       	dec	r24
 11a:	f1 f7       	brne	.-4      	; 0x118 <lcd_init+0x32>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <lcd_init+0x38>
 11e:	d8 b9       	out	0x08, r29	; 8
 120:	d7 df       	rcall	.-82     	; 0xd0 <lcd_enable_pulse>
 122:	c8 b9       	out	0x08, r28	; 8
 124:	d5 df       	rcall	.-86     	; 0xd0 <lcd_enable_pulse>
 126:	9a e6       	ldi	r25, 0x6A	; 106
 128:	9a 95       	dec	r25
 12a:	f1 f7       	brne	.-4      	; 0x128 <lcd_init+0x42>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <lcd_init+0x48>
 12e:	18 b8       	out	0x08, r1	; 8
 130:	cf df       	rcall	.-98     	; 0xd0 <lcd_enable_pulse>
 132:	80 ef       	ldi	r24, 0xF0	; 240
 134:	88 b9       	out	0x08, r24	; 8
 136:	cc df       	rcall	.-104    	; 0xd0 <lcd_enable_pulse>
 138:	2a e6       	ldi	r18, 0x6A	; 106
 13a:	2a 95       	dec	r18
 13c:	f1 f7       	brne	.-4      	; 0x13a <lcd_init+0x54>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <lcd_init+0x5a>
 140:	18 b8       	out	0x08, r1	; 8
 142:	c6 df       	rcall	.-116    	; 0xd0 <lcd_enable_pulse>
 144:	80 e1       	ldi	r24, 0x10	; 16
 146:	88 b9       	out	0x08, r24	; 8
 148:	c3 df       	rcall	.-122    	; 0xd0 <lcd_enable_pulse>
 14a:	8f e9       	ldi	r24, 0x9F	; 159
 14c:	9f e0       	ldi	r25, 0x0F	; 15
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <lcd_init+0x68>
 152:	00 c0       	rjmp	.+0      	; 0x154 <lcd_init+0x6e>
 154:	00 00       	nop
 156:	18 b8       	out	0x08, r1	; 8
 158:	bb df       	rcall	.-138    	; 0xd0 <lcd_enable_pulse>
 15a:	80 e6       	ldi	r24, 0x60	; 96
 15c:	88 b9       	out	0x08, r24	; 8
 15e:	b8 df       	rcall	.-144    	; 0xd0 <lcd_enable_pulse>
 160:	8f e1       	ldi	r24, 0x1F	; 31
 162:	9e e4       	ldi	r25, 0x4E	; 78
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <lcd_init+0x7e>
 168:	00 c0       	rjmp	.+0      	; 0x16a <lcd_init+0x84>
 16a:	00 00       	nop
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	08 95       	ret

00000172 <lcd_write_char>:
 172:	cf 93       	push	r28
 174:	c8 2f       	mov	r28, r24
 176:	2a e6       	ldi	r18, 0x6A	; 106
 178:	2a 95       	dec	r18
 17a:	f1 f7       	brne	.-4      	; 0x178 <lcd_write_char+0x6>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <lcd_write_char+0xc>
 17e:	80 7f       	andi	r24, 0xF0	; 240
 180:	84 60       	ori	r24, 0x04	; 4
 182:	88 b9       	out	0x08, r24	; 8
 184:	a5 df       	rcall	.-182    	; 0xd0 <lcd_enable_pulse>
 186:	20 e1       	ldi	r18, 0x10	; 16
 188:	c2 9f       	mul	r28, r18
 18a:	c0 01       	movw	r24, r0
 18c:	11 24       	eor	r1, r1
 18e:	84 60       	ori	r24, 0x04	; 4
 190:	88 b9       	out	0x08, r24	; 8
 192:	9e df       	rcall	.-196    	; 0xd0 <lcd_enable_pulse>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <lcd_set_cursor_position>:
* Input:
* Output:
* Notes:
******************************************************************************/
void lcd_set_cursor_position(uint8_t pos)
{
 198:	cf 93       	push	r28
	if(pos<0x67)
 19a:	87 36       	cpi	r24, 0x67	; 103
 19c:	a0 f4       	brcc	.+40     	; 0x1c6 <lcd_set_cursor_position+0x2e>
	{
		pos = pos | (1<<LCD_D7);
 19e:	c8 2f       	mov	r28, r24
 1a0:	c0 68       	ori	r28, 0x80	; 128
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a2:	2a e6       	ldi	r18, 0x6A	; 106
 1a4:	2a 95       	dec	r18
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <lcd_set_cursor_position+0xc>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <lcd_set_cursor_position+0x12>
		
		_delay_us(40);
		PORTC = (pos & 0xf0) | (0<<LCD_RS);
 1aa:	80 7f       	andi	r24, 0xF0	; 240
 1ac:	80 68       	ori	r24, 0x80	; 128
 1ae:	88 b9       	out	0x08, r24	; 8
		lcd_enable_pulse();
 1b0:	8f df       	rcall	.-226    	; 0xd0 <lcd_enable_pulse>
		PORTC = ((pos & 0x0f)<<4) | (0<<LCD_RS);
 1b2:	20 e1       	ldi	r18, 0x10	; 16
 1b4:	c2 9f       	mul	r28, r18
 1b6:	c0 01       	movw	r24, r0
 1b8:	11 24       	eor	r1, r1
		lcd_enable_pulse();
 1ba:	88 b9       	out	0x08, r24	; 8
 1bc:	89 df       	rcall	.-238    	; 0xd0 <lcd_enable_pulse>
 1be:	8a e6       	ldi	r24, 0x6A	; 106
 1c0:	8a 95       	dec	r24
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <lcd_set_cursor_position+0x28>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <lcd_set_cursor_position+0x2e>
		_delay_us(40);
	}
}
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <lcd_write_string>:
* Input:
* Output:
* Notes:
******************************************************************************/
void lcd_write_string(char *string)
{
 1ca:	cf 93       	push	r28
 1cc:	df 93       	push	r29
 1ce:	ec 01       	movw	r28, r24
	char *p = string;
	
	while(*p != 0) lcd_write_char(*p++);
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <lcd_write_string+0xc>
 1d2:	21 96       	adiw	r28, 0x01	; 1
 1d4:	ce df       	rcall	.-100    	; 0x172 <lcd_write_char>
 1d6:	88 81       	ld	r24, Y
 1d8:	81 11       	cpse	r24, r1
 1da:	fb cf       	rjmp	.-10     	; 0x1d2 <lcd_write_string+0x8>
}
 1dc:	df 91       	pop	r29
 1de:	cf 91       	pop	r28
 1e0:	08 95       	ret

000001e2 <port_init>:
* Output:
* Notes:
******************************************************************************/
void port_init(void)
{	
	DDRC = (1<<LCD_E) | (1<<LCD_RS) | (1<<LCD_D7) | (1<<LCD_D6) | (1<<LCD_D5) | (1<<LCD_D4);
 1e2:	8c ef       	ldi	r24, 0xFC	; 252
 1e4:	87 b9       	out	0x07, r24	; 7
	PORTC = (0<<LCD_E) | (0<<LCD_RS) | (0<<LCD_D7) | (0<<LCD_D6) | (0<<LCD_D5) | (0<<LCD_D4);
 1e6:	18 b8       	out	0x08, r1	; 8
 1e8:	08 95       	ret

000001ea <main>:
* Input:            
* Output:           
* Notes:            
******************************************************************************/
int main(void)
{
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	e2 97       	sbiw	r28, 0x32	; 50
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
	port_init();
 1fe:	f1 df       	rcall	.-30     	; 0x1e2 <port_init>
	timer_init();
 200:	cc d0       	rcall	.+408    	; 0x39a <timer_init>
	lcd_init();
 202:	71 df       	rcall	.-286    	; 0xe6 <lcd_init>
 204:	d2 d0       	rcall	.+420    	; 0x3aa <external_int_init>
	external_int_init();
 206:	83 e3       	ldi	r24, 0x33	; 51
	uart0_init(BAUD9600);
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	d5 d0       	rcall	.+426    	; 0x3b6 <uart0_init>
 20c:	78 94       	sei
 20e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <task_10ms>
	/* Replace with your application code */
	while(1)
	{
		
		// CAN halozat kommunikacio
		if(task_10ms == TRUE)
 212:	81 30       	cpi	r24, 0x01	; 1
 214:	11 f4       	brne	.+4      	; 0x21a <main+0x30>
 216:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <task_10ms>
		{
			// speed, pos kikuldese CAN-en
			task_10ms = FALSE;
 21a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <task_500ms>
		}
		
		
		//LCD megjelenites
		if(task_500ms == TRUE)
 21e:	81 30       	cpi	r24, 0x01	; 1
 220:	79 f5       	brne	.+94     	; 0x280 <main+0x96>
 222:	ea e2       	ldi	r30, 0x2A	; 42
 224:	f1 e0       	ldi	r31, 0x01	; 1
		{
			char write_string[50];
			sprintf(write_string,"pos:%d,%d pszi:%d",pose[0], pose[1], pose[3]);
 226:	87 85       	ldd	r24, Z+15	; 0x0f
 228:	8f 93       	push	r24
 22a:	86 85       	ldd	r24, Z+14	; 0x0e
 22c:	8f 93       	push	r24
 22e:	85 85       	ldd	r24, Z+13	; 0x0d
 230:	8f 93       	push	r24
 232:	84 85       	ldd	r24, Z+12	; 0x0c
 234:	8f 93       	push	r24
 236:	87 81       	ldd	r24, Z+7	; 0x07
 238:	8f 93       	push	r24
 23a:	86 81       	ldd	r24, Z+6	; 0x06
 23c:	8f 93       	push	r24
 23e:	85 81       	ldd	r24, Z+5	; 0x05
 240:	8f 93       	push	r24
 242:	84 81       	ldd	r24, Z+4	; 0x04
 244:	8f 93       	push	r24
 246:	83 81       	ldd	r24, Z+3	; 0x03
 248:	8f 93       	push	r24
 24a:	82 81       	ldd	r24, Z+2	; 0x02
 24c:	8f 93       	push	r24
 24e:	81 81       	ldd	r24, Z+1	; 0x01
 250:	8f 93       	push	r24
 252:	80 81       	ld	r24, Z
 254:	8f 93       	push	r24
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	91 e0       	ldi	r25, 0x01	; 1
 25a:	9f 93       	push	r25
 25c:	8f 93       	push	r24
 25e:	8e 01       	movw	r16, r28
 260:	0f 5f       	subi	r16, 0xFF	; 255
 262:	1f 4f       	sbci	r17, 0xFF	; 255
 264:	1f 93       	push	r17
 266:	0f 93       	push	r16
 268:	d3 d0       	rcall	.+422    	; 0x410 <sprintf>
			lcd_set_cursor_position(0);
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	95 df       	rcall	.-214    	; 0x198 <lcd_set_cursor_position>
 26e:	c8 01       	movw	r24, r16
			lcd_write_string(write_string);
 270:	ac df       	rcall	.-168    	; 0x1ca <lcd_write_string>
 272:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <task_500ms>
			
			task_500ms = FALSE;
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	f8 94       	cli
 27a:	de bf       	out	0x3e, r29	; 62
 27c:	0f be       	out	0x3f, r0	; 63
 27e:	cd bf       	out	0x3d, r28	; 61
 280:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <task_100ms>
		}
		
		
		//UART kommunikacio
		if(task_100ms == TRUE)
 284:	81 30       	cpi	r24, 0x01	; 1
 286:	09 f0       	breq	.+2      	; 0x28a <main+0xa0>
 288:	c2 cf       	rjmp	.-124    	; 0x20e <main+0x24>
 28a:	ea e2       	ldi	r30, 0x2A	; 42
 28c:	f1 e0       	ldi	r31, 0x01	; 1
		{
			char write_string[50];
			sprintf(write_string,"posx:%d posy:%d pszi:%d",pose[0], pose[1], pose[3]);
 28e:	87 85       	ldd	r24, Z+15	; 0x0f
 290:	8f 93       	push	r24
 292:	86 85       	ldd	r24, Z+14	; 0x0e
 294:	8f 93       	push	r24
 296:	85 85       	ldd	r24, Z+13	; 0x0d
 298:	8f 93       	push	r24
 29a:	84 85       	ldd	r24, Z+12	; 0x0c
 29c:	8f 93       	push	r24
 29e:	87 81       	ldd	r24, Z+7	; 0x07
 2a0:	8f 93       	push	r24
 2a2:	86 81       	ldd	r24, Z+6	; 0x06
 2a4:	8f 93       	push	r24
 2a6:	85 81       	ldd	r24, Z+5	; 0x05
 2a8:	8f 93       	push	r24
 2aa:	84 81       	ldd	r24, Z+4	; 0x04
 2ac:	8f 93       	push	r24
 2ae:	83 81       	ldd	r24, Z+3	; 0x03
 2b0:	8f 93       	push	r24
 2b2:	82 81       	ldd	r24, Z+2	; 0x02
 2b4:	8f 93       	push	r24
 2b6:	81 81       	ldd	r24, Z+1	; 0x01
 2b8:	8f 93       	push	r24
 2ba:	80 81       	ld	r24, Z
 2bc:	8f 93       	push	r24
 2be:	82 e1       	ldi	r24, 0x12	; 18
 2c0:	91 e0       	ldi	r25, 0x01	; 1
 2c2:	9f 93       	push	r25
 2c4:	8f 93       	push	r24
 2c6:	8e 01       	movw	r16, r28
 2c8:	0f 5f       	subi	r16, 0xFF	; 255
 2ca:	1f 4f       	sbci	r17, 0xFF	; 255
 2cc:	1f 93       	push	r17
 2ce:	0f 93       	push	r16
 2d0:	9f d0       	rcall	.+318    	; 0x410 <sprintf>
 2d2:	c8 01       	movw	r24, r16
			uart_write_string(write_string);
 2d4:	82 d0       	rcall	.+260    	; 0x3da <uart_write_string>
 2d6:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <task_100ms>
			
			task_100ms = FALSE;
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	f8 94       	cli
 2de:	de bf       	out	0x3e, r29	; 62
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	cd bf       	out	0x3d, r28	; 61
 2e4:	94 cf       	rjmp	.-216    	; 0x20e <main+0x24>

000002e6 <__vector_16>:
 2e6:	1f 92       	push	r1
 2e8:	0f 92       	push	r0

/******************************************************************************
* Interrupt Routines
******************************************************************************/
ISR(TIMER0_COMP_vect) //timer CTC interrupt
{
 2ea:	0f b6       	in	r0, 0x3f	; 63
 2ec:	0f 92       	push	r0
 2ee:	11 24       	eor	r1, r1
 2f0:	2f 93       	push	r18
 2f2:	3f 93       	push	r19
 2f4:	4f 93       	push	r20
 2f6:	5f 93       	push	r21
 2f8:	6f 93       	push	r22
 2fa:	7f 93       	push	r23
 2fc:	8f 93       	push	r24
 2fe:	9f 93       	push	r25
 300:	af 93       	push	r26
 302:	bf 93       	push	r27
	timer_cnt++;
 304:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <timer_cnt>
 308:	50 91 37 01 	lds	r21, 0x0137	; 0x800137 <timer_cnt+0x1>
 30c:	4f 5f       	subi	r20, 0xFF	; 255
 30e:	5f 4f       	sbci	r21, 0xFF	; 255
 310:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timer_cnt+0x1>
 314:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timer_cnt>
	if((timer_cnt % 1) == 0) task_10ms = TRUE;
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <task_10ms>
	if((timer_cnt % 10) == 0) task_100ms =TRUE;
 31e:	9a 01       	movw	r18, r20
 320:	ad ec       	ldi	r26, 0xCD	; 205
 322:	bc ec       	ldi	r27, 0xCC	; 204
 324:	66 d0       	rcall	.+204    	; 0x3f2 <__umulhisi3>
 326:	96 95       	lsr	r25
 328:	87 95       	ror	r24
 32a:	96 95       	lsr	r25
 32c:	87 95       	ror	r24
 32e:	96 95       	lsr	r25
 330:	87 95       	ror	r24
 332:	9c 01       	movw	r18, r24
 334:	22 0f       	add	r18, r18
 336:	33 1f       	adc	r19, r19
 338:	88 0f       	add	r24, r24
 33a:	99 1f       	adc	r25, r25
 33c:	88 0f       	add	r24, r24
 33e:	99 1f       	adc	r25, r25
 340:	88 0f       	add	r24, r24
 342:	99 1f       	adc	r25, r25
 344:	82 0f       	add	r24, r18
 346:	93 1f       	adc	r25, r19
 348:	48 17       	cp	r20, r24
 34a:	59 07       	cpc	r21, r25
 34c:	19 f4       	brne	.+6      	; 0x354 <__vector_16+0x6e>
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <task_100ms>
	if((timer_cnt % 50) == 0) task_500ms = TRUE;
 354:	9a 01       	movw	r18, r20
 356:	36 95       	lsr	r19
 358:	27 95       	ror	r18
 35a:	ab e7       	ldi	r26, 0x7B	; 123
 35c:	b4 e1       	ldi	r27, 0x14	; 20
 35e:	49 d0       	rcall	.+146    	; 0x3f2 <__umulhisi3>
 360:	96 95       	lsr	r25
 362:	87 95       	ror	r24
 364:	62 e3       	ldi	r22, 0x32	; 50
 366:	68 9f       	mul	r22, r24
 368:	90 01       	movw	r18, r0
 36a:	69 9f       	mul	r22, r25
 36c:	30 0d       	add	r19, r0
 36e:	11 24       	eor	r1, r1
 370:	42 17       	cp	r20, r18
 372:	53 07       	cpc	r21, r19
 374:	19 f4       	brne	.+6      	; 0x37c <__vector_16+0x96>
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <task_500ms>
 37c:	bf 91       	pop	r27
 37e:	af 91       	pop	r26
 380:	9f 91       	pop	r25
 382:	8f 91       	pop	r24
 384:	7f 91       	pop	r23
 386:	6f 91       	pop	r22
 388:	5f 91       	pop	r21
 38a:	4f 91       	pop	r20
 38c:	3f 91       	pop	r19
 38e:	2f 91       	pop	r18
 390:	0f 90       	pop	r0
 392:	0f be       	out	0x3f, r0	; 63
 394:	0f 90       	pop	r0
 396:	1f 90       	pop	r1
 398:	18 95       	reti

0000039a <timer_init>:
* Output:
* Notes:			10 ms, CTC
******************************************************************************/
void timer_init(void)
{
	TCCR0A = (0<<WGM00) | (1<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
 39a:	8d e0       	ldi	r24, 0x0D	; 13
 39c:	84 bd       	out	0x24, r24	; 36
	OCR0A = 77;
 39e:	8d e4       	ldi	r24, 0x4D	; 77
 3a0:	87 bd       	out	0x27, r24	; 39
	TIMSK0 = (1<<OCIE0A);
 3a2:	82 e0       	ldi	r24, 0x02	; 2
 3a4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
 3a8:	08 95       	ret

000003aa <external_int_init>:
* Output:
* Notes:
******************************************************************************/
void external_int_init(void)
{
	EICRA = (1<<ISC01) | (0<<ISC00);
 3aa:	82 e0       	ldi	r24, 0x02	; 2
 3ac:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = (1<<INT0);
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	8d bb       	out	0x1d, r24	; 29
 3b4:	08 95       	ret

000003b6 <uart0_init>:
* Notes:
******************************************************************************/
void uart0_init(uint16_t baud)
{
	/* Set baud rate */
	UBRR0H = (unsigned char) (baud>>8);
 3b6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char) baud;
 3ba:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	/* Set frame format: 8data, no parity & 1 stop bits */
	UCSR0C = (0<<UMSEL0) | (0<<UPM0) | (1<<USBS0) | (1<<UCSZ0) | (1<<UCSZ1);
 3be:	8e e0       	ldi	r24, 0x0E	; 14
 3c0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0) | (1<<TXEN0) | (1<<RXCIE0);
 3c4:	88 e9       	ldi	r24, 0x98	; 152
 3c6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 3ca:	08 95       	ret

000003cc <uart0_send_char>:
* Notes:
******************************************************************************/
void uart0_send_char(char data)
{
	/* Wait for empty transmit buffer */
	while ( ! ( UCSR0A & (1<<UDRE0)));
 3cc:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 3d0:	95 ff       	sbrs	r25, 5
 3d2:	fc cf       	rjmp	.-8      	; 0x3cc <uart0_send_char>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 3d4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 3d8:	08 95       	ret

000003da <uart_write_string>:
* Input:
* Output:
* Notes:
******************************************************************************/
void uart_write_string(char *string)
{
 3da:	cf 93       	push	r28
 3dc:	df 93       	push	r29
 3de:	ec 01       	movw	r28, r24
	char *p = string;
	
	while(*p != 0) uart0_send_char(*p++);
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <uart_write_string+0xc>
 3e2:	21 96       	adiw	r28, 0x01	; 1
 3e4:	f3 df       	rcall	.-26     	; 0x3cc <uart0_send_char>
 3e6:	88 81       	ld	r24, Y
 3e8:	81 11       	cpse	r24, r1
 3ea:	fb cf       	rjmp	.-10     	; 0x3e2 <uart_write_string+0x8>
}
 3ec:	df 91       	pop	r29
 3ee:	cf 91       	pop	r28
 3f0:	08 95       	ret

000003f2 <__umulhisi3>:
 3f2:	a2 9f       	mul	r26, r18
 3f4:	b0 01       	movw	r22, r0
 3f6:	b3 9f       	mul	r27, r19
 3f8:	c0 01       	movw	r24, r0
 3fa:	a3 9f       	mul	r26, r19
 3fc:	70 0d       	add	r23, r0
 3fe:	81 1d       	adc	r24, r1
 400:	11 24       	eor	r1, r1
 402:	91 1d       	adc	r25, r1
 404:	b2 9f       	mul	r27, r18
 406:	70 0d       	add	r23, r0
 408:	81 1d       	adc	r24, r1
 40a:	11 24       	eor	r1, r1
 40c:	91 1d       	adc	r25, r1
 40e:	08 95       	ret

00000410 <sprintf>:
 410:	0f 93       	push	r16
 412:	1f 93       	push	r17
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	cd b7       	in	r28, 0x3d	; 61
 41a:	de b7       	in	r29, 0x3e	; 62
 41c:	2e 97       	sbiw	r28, 0x0e	; 14
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	f8 94       	cli
 422:	de bf       	out	0x3e, r29	; 62
 424:	0f be       	out	0x3f, r0	; 63
 426:	cd bf       	out	0x3d, r28	; 61
 428:	0d 89       	ldd	r16, Y+21	; 0x15
 42a:	1e 89       	ldd	r17, Y+22	; 0x16
 42c:	86 e0       	ldi	r24, 0x06	; 6
 42e:	8c 83       	std	Y+4, r24	; 0x04
 430:	1a 83       	std	Y+2, r17	; 0x02
 432:	09 83       	std	Y+1, r16	; 0x01
 434:	8f ef       	ldi	r24, 0xFF	; 255
 436:	9f e7       	ldi	r25, 0x7F	; 127
 438:	9e 83       	std	Y+6, r25	; 0x06
 43a:	8d 83       	std	Y+5, r24	; 0x05
 43c:	ae 01       	movw	r20, r28
 43e:	47 5e       	subi	r20, 0xE7	; 231
 440:	5f 4f       	sbci	r21, 0xFF	; 255
 442:	6f 89       	ldd	r22, Y+23	; 0x17
 444:	78 8d       	ldd	r23, Y+24	; 0x18
 446:	ce 01       	movw	r24, r28
 448:	01 96       	adiw	r24, 0x01	; 1
 44a:	10 d0       	rcall	.+32     	; 0x46c <vfprintf>
 44c:	ef 81       	ldd	r30, Y+7	; 0x07
 44e:	f8 85       	ldd	r31, Y+8	; 0x08
 450:	e0 0f       	add	r30, r16
 452:	f1 1f       	adc	r31, r17
 454:	10 82       	st	Z, r1
 456:	2e 96       	adiw	r28, 0x0e	; 14
 458:	0f b6       	in	r0, 0x3f	; 63
 45a:	f8 94       	cli
 45c:	de bf       	out	0x3e, r29	; 62
 45e:	0f be       	out	0x3f, r0	; 63
 460:	cd bf       	out	0x3d, r28	; 61
 462:	df 91       	pop	r29
 464:	cf 91       	pop	r28
 466:	1f 91       	pop	r17
 468:	0f 91       	pop	r16
 46a:	08 95       	ret

0000046c <vfprintf>:
 46c:	2f 92       	push	r2
 46e:	3f 92       	push	r3
 470:	4f 92       	push	r4
 472:	5f 92       	push	r5
 474:	6f 92       	push	r6
 476:	7f 92       	push	r7
 478:	8f 92       	push	r8
 47a:	9f 92       	push	r9
 47c:	af 92       	push	r10
 47e:	bf 92       	push	r11
 480:	cf 92       	push	r12
 482:	df 92       	push	r13
 484:	ef 92       	push	r14
 486:	ff 92       	push	r15
 488:	0f 93       	push	r16
 48a:	1f 93       	push	r17
 48c:	cf 93       	push	r28
 48e:	df 93       	push	r29
 490:	cd b7       	in	r28, 0x3d	; 61
 492:	de b7       	in	r29, 0x3e	; 62
 494:	2b 97       	sbiw	r28, 0x0b	; 11
 496:	0f b6       	in	r0, 0x3f	; 63
 498:	f8 94       	cli
 49a:	de bf       	out	0x3e, r29	; 62
 49c:	0f be       	out	0x3f, r0	; 63
 49e:	cd bf       	out	0x3d, r28	; 61
 4a0:	6c 01       	movw	r12, r24
 4a2:	7b 01       	movw	r14, r22
 4a4:	8a 01       	movw	r16, r20
 4a6:	fc 01       	movw	r30, r24
 4a8:	17 82       	std	Z+7, r1	; 0x07
 4aa:	16 82       	std	Z+6, r1	; 0x06
 4ac:	83 81       	ldd	r24, Z+3	; 0x03
 4ae:	81 ff       	sbrs	r24, 1
 4b0:	bf c1       	rjmp	.+894    	; 0x830 <vfprintf+0x3c4>
 4b2:	ce 01       	movw	r24, r28
 4b4:	01 96       	adiw	r24, 0x01	; 1
 4b6:	3c 01       	movw	r6, r24
 4b8:	f6 01       	movw	r30, r12
 4ba:	93 81       	ldd	r25, Z+3	; 0x03
 4bc:	f7 01       	movw	r30, r14
 4be:	93 fd       	sbrc	r25, 3
 4c0:	85 91       	lpm	r24, Z+
 4c2:	93 ff       	sbrs	r25, 3
 4c4:	81 91       	ld	r24, Z+
 4c6:	7f 01       	movw	r14, r30
 4c8:	88 23       	and	r24, r24
 4ca:	09 f4       	brne	.+2      	; 0x4ce <vfprintf+0x62>
 4cc:	ad c1       	rjmp	.+858    	; 0x828 <vfprintf+0x3bc>
 4ce:	85 32       	cpi	r24, 0x25	; 37
 4d0:	39 f4       	brne	.+14     	; 0x4e0 <vfprintf+0x74>
 4d2:	93 fd       	sbrc	r25, 3
 4d4:	85 91       	lpm	r24, Z+
 4d6:	93 ff       	sbrs	r25, 3
 4d8:	81 91       	ld	r24, Z+
 4da:	7f 01       	movw	r14, r30
 4dc:	85 32       	cpi	r24, 0x25	; 37
 4de:	21 f4       	brne	.+8      	; 0x4e8 <vfprintf+0x7c>
 4e0:	b6 01       	movw	r22, r12
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	d6 d1       	rcall	.+940    	; 0x892 <fputc>
 4e6:	e8 cf       	rjmp	.-48     	; 0x4b8 <vfprintf+0x4c>
 4e8:	91 2c       	mov	r9, r1
 4ea:	21 2c       	mov	r2, r1
 4ec:	31 2c       	mov	r3, r1
 4ee:	ff e1       	ldi	r31, 0x1F	; 31
 4f0:	f3 15       	cp	r31, r3
 4f2:	d8 f0       	brcs	.+54     	; 0x52a <vfprintf+0xbe>
 4f4:	8b 32       	cpi	r24, 0x2B	; 43
 4f6:	79 f0       	breq	.+30     	; 0x516 <vfprintf+0xaa>
 4f8:	38 f4       	brcc	.+14     	; 0x508 <vfprintf+0x9c>
 4fa:	80 32       	cpi	r24, 0x20	; 32
 4fc:	79 f0       	breq	.+30     	; 0x51c <vfprintf+0xb0>
 4fe:	83 32       	cpi	r24, 0x23	; 35
 500:	a1 f4       	brne	.+40     	; 0x52a <vfprintf+0xbe>
 502:	23 2d       	mov	r18, r3
 504:	20 61       	ori	r18, 0x10	; 16
 506:	1d c0       	rjmp	.+58     	; 0x542 <vfprintf+0xd6>
 508:	8d 32       	cpi	r24, 0x2D	; 45
 50a:	61 f0       	breq	.+24     	; 0x524 <vfprintf+0xb8>
 50c:	80 33       	cpi	r24, 0x30	; 48
 50e:	69 f4       	brne	.+26     	; 0x52a <vfprintf+0xbe>
 510:	23 2d       	mov	r18, r3
 512:	21 60       	ori	r18, 0x01	; 1
 514:	16 c0       	rjmp	.+44     	; 0x542 <vfprintf+0xd6>
 516:	83 2d       	mov	r24, r3
 518:	82 60       	ori	r24, 0x02	; 2
 51a:	38 2e       	mov	r3, r24
 51c:	e3 2d       	mov	r30, r3
 51e:	e4 60       	ori	r30, 0x04	; 4
 520:	3e 2e       	mov	r3, r30
 522:	2a c0       	rjmp	.+84     	; 0x578 <vfprintf+0x10c>
 524:	f3 2d       	mov	r31, r3
 526:	f8 60       	ori	r31, 0x08	; 8
 528:	1d c0       	rjmp	.+58     	; 0x564 <vfprintf+0xf8>
 52a:	37 fc       	sbrc	r3, 7
 52c:	2d c0       	rjmp	.+90     	; 0x588 <vfprintf+0x11c>
 52e:	20 ed       	ldi	r18, 0xD0	; 208
 530:	28 0f       	add	r18, r24
 532:	2a 30       	cpi	r18, 0x0A	; 10
 534:	40 f0       	brcs	.+16     	; 0x546 <vfprintf+0xda>
 536:	8e 32       	cpi	r24, 0x2E	; 46
 538:	b9 f4       	brne	.+46     	; 0x568 <vfprintf+0xfc>
 53a:	36 fc       	sbrc	r3, 6
 53c:	75 c1       	rjmp	.+746    	; 0x828 <vfprintf+0x3bc>
 53e:	23 2d       	mov	r18, r3
 540:	20 64       	ori	r18, 0x40	; 64
 542:	32 2e       	mov	r3, r18
 544:	19 c0       	rjmp	.+50     	; 0x578 <vfprintf+0x10c>
 546:	36 fe       	sbrs	r3, 6
 548:	06 c0       	rjmp	.+12     	; 0x556 <vfprintf+0xea>
 54a:	8a e0       	ldi	r24, 0x0A	; 10
 54c:	98 9e       	mul	r9, r24
 54e:	20 0d       	add	r18, r0
 550:	11 24       	eor	r1, r1
 552:	92 2e       	mov	r9, r18
 554:	11 c0       	rjmp	.+34     	; 0x578 <vfprintf+0x10c>
 556:	ea e0       	ldi	r30, 0x0A	; 10
 558:	2e 9e       	mul	r2, r30
 55a:	20 0d       	add	r18, r0
 55c:	11 24       	eor	r1, r1
 55e:	22 2e       	mov	r2, r18
 560:	f3 2d       	mov	r31, r3
 562:	f0 62       	ori	r31, 0x20	; 32
 564:	3f 2e       	mov	r3, r31
 566:	08 c0       	rjmp	.+16     	; 0x578 <vfprintf+0x10c>
 568:	8c 36       	cpi	r24, 0x6C	; 108
 56a:	21 f4       	brne	.+8      	; 0x574 <vfprintf+0x108>
 56c:	83 2d       	mov	r24, r3
 56e:	80 68       	ori	r24, 0x80	; 128
 570:	38 2e       	mov	r3, r24
 572:	02 c0       	rjmp	.+4      	; 0x578 <vfprintf+0x10c>
 574:	88 36       	cpi	r24, 0x68	; 104
 576:	41 f4       	brne	.+16     	; 0x588 <vfprintf+0x11c>
 578:	f7 01       	movw	r30, r14
 57a:	93 fd       	sbrc	r25, 3
 57c:	85 91       	lpm	r24, Z+
 57e:	93 ff       	sbrs	r25, 3
 580:	81 91       	ld	r24, Z+
 582:	7f 01       	movw	r14, r30
 584:	81 11       	cpse	r24, r1
 586:	b3 cf       	rjmp	.-154    	; 0x4ee <vfprintf+0x82>
 588:	98 2f       	mov	r25, r24
 58a:	9f 7d       	andi	r25, 0xDF	; 223
 58c:	95 54       	subi	r25, 0x45	; 69
 58e:	93 30       	cpi	r25, 0x03	; 3
 590:	28 f4       	brcc	.+10     	; 0x59c <vfprintf+0x130>
 592:	0c 5f       	subi	r16, 0xFC	; 252
 594:	1f 4f       	sbci	r17, 0xFF	; 255
 596:	9f e3       	ldi	r25, 0x3F	; 63
 598:	99 83       	std	Y+1, r25	; 0x01
 59a:	0d c0       	rjmp	.+26     	; 0x5b6 <vfprintf+0x14a>
 59c:	83 36       	cpi	r24, 0x63	; 99
 59e:	31 f0       	breq	.+12     	; 0x5ac <vfprintf+0x140>
 5a0:	83 37       	cpi	r24, 0x73	; 115
 5a2:	71 f0       	breq	.+28     	; 0x5c0 <vfprintf+0x154>
 5a4:	83 35       	cpi	r24, 0x53	; 83
 5a6:	09 f0       	breq	.+2      	; 0x5aa <vfprintf+0x13e>
 5a8:	55 c0       	rjmp	.+170    	; 0x654 <vfprintf+0x1e8>
 5aa:	20 c0       	rjmp	.+64     	; 0x5ec <vfprintf+0x180>
 5ac:	f8 01       	movw	r30, r16
 5ae:	80 81       	ld	r24, Z
 5b0:	89 83       	std	Y+1, r24	; 0x01
 5b2:	0e 5f       	subi	r16, 0xFE	; 254
 5b4:	1f 4f       	sbci	r17, 0xFF	; 255
 5b6:	88 24       	eor	r8, r8
 5b8:	83 94       	inc	r8
 5ba:	91 2c       	mov	r9, r1
 5bc:	53 01       	movw	r10, r6
 5be:	12 c0       	rjmp	.+36     	; 0x5e4 <vfprintf+0x178>
 5c0:	28 01       	movw	r4, r16
 5c2:	f2 e0       	ldi	r31, 0x02	; 2
 5c4:	4f 0e       	add	r4, r31
 5c6:	51 1c       	adc	r5, r1
 5c8:	f8 01       	movw	r30, r16
 5ca:	a0 80       	ld	r10, Z
 5cc:	b1 80       	ldd	r11, Z+1	; 0x01
 5ce:	36 fe       	sbrs	r3, 6
 5d0:	03 c0       	rjmp	.+6      	; 0x5d8 <vfprintf+0x16c>
 5d2:	69 2d       	mov	r22, r9
 5d4:	70 e0       	ldi	r23, 0x00	; 0
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <vfprintf+0x170>
 5d8:	6f ef       	ldi	r22, 0xFF	; 255
 5da:	7f ef       	ldi	r23, 0xFF	; 255
 5dc:	c5 01       	movw	r24, r10
 5de:	4e d1       	rcall	.+668    	; 0x87c <strnlen>
 5e0:	4c 01       	movw	r8, r24
 5e2:	82 01       	movw	r16, r4
 5e4:	f3 2d       	mov	r31, r3
 5e6:	ff 77       	andi	r31, 0x7F	; 127
 5e8:	3f 2e       	mov	r3, r31
 5ea:	15 c0       	rjmp	.+42     	; 0x616 <vfprintf+0x1aa>
 5ec:	28 01       	movw	r4, r16
 5ee:	22 e0       	ldi	r18, 0x02	; 2
 5f0:	42 0e       	add	r4, r18
 5f2:	51 1c       	adc	r5, r1
 5f4:	f8 01       	movw	r30, r16
 5f6:	a0 80       	ld	r10, Z
 5f8:	b1 80       	ldd	r11, Z+1	; 0x01
 5fa:	36 fe       	sbrs	r3, 6
 5fc:	03 c0       	rjmp	.+6      	; 0x604 <vfprintf+0x198>
 5fe:	69 2d       	mov	r22, r9
 600:	70 e0       	ldi	r23, 0x00	; 0
 602:	02 c0       	rjmp	.+4      	; 0x608 <vfprintf+0x19c>
 604:	6f ef       	ldi	r22, 0xFF	; 255
 606:	7f ef       	ldi	r23, 0xFF	; 255
 608:	c5 01       	movw	r24, r10
 60a:	2d d1       	rcall	.+602    	; 0x866 <strnlen_P>
 60c:	4c 01       	movw	r8, r24
 60e:	f3 2d       	mov	r31, r3
 610:	f0 68       	ori	r31, 0x80	; 128
 612:	3f 2e       	mov	r3, r31
 614:	82 01       	movw	r16, r4
 616:	33 fc       	sbrc	r3, 3
 618:	19 c0       	rjmp	.+50     	; 0x64c <vfprintf+0x1e0>
 61a:	82 2d       	mov	r24, r2
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	88 16       	cp	r8, r24
 620:	99 06       	cpc	r9, r25
 622:	a0 f4       	brcc	.+40     	; 0x64c <vfprintf+0x1e0>
 624:	b6 01       	movw	r22, r12
 626:	80 e2       	ldi	r24, 0x20	; 32
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	33 d1       	rcall	.+614    	; 0x892 <fputc>
 62c:	2a 94       	dec	r2
 62e:	f5 cf       	rjmp	.-22     	; 0x61a <vfprintf+0x1ae>
 630:	f5 01       	movw	r30, r10
 632:	37 fc       	sbrc	r3, 7
 634:	85 91       	lpm	r24, Z+
 636:	37 fe       	sbrs	r3, 7
 638:	81 91       	ld	r24, Z+
 63a:	5f 01       	movw	r10, r30
 63c:	b6 01       	movw	r22, r12
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	28 d1       	rcall	.+592    	; 0x892 <fputc>
 642:	21 10       	cpse	r2, r1
 644:	2a 94       	dec	r2
 646:	21 e0       	ldi	r18, 0x01	; 1
 648:	82 1a       	sub	r8, r18
 64a:	91 08       	sbc	r9, r1
 64c:	81 14       	cp	r8, r1
 64e:	91 04       	cpc	r9, r1
 650:	79 f7       	brne	.-34     	; 0x630 <vfprintf+0x1c4>
 652:	e1 c0       	rjmp	.+450    	; 0x816 <vfprintf+0x3aa>
 654:	84 36       	cpi	r24, 0x64	; 100
 656:	11 f0       	breq	.+4      	; 0x65c <vfprintf+0x1f0>
 658:	89 36       	cpi	r24, 0x69	; 105
 65a:	39 f5       	brne	.+78     	; 0x6aa <vfprintf+0x23e>
 65c:	f8 01       	movw	r30, r16
 65e:	37 fe       	sbrs	r3, 7
 660:	07 c0       	rjmp	.+14     	; 0x670 <vfprintf+0x204>
 662:	60 81       	ld	r22, Z
 664:	71 81       	ldd	r23, Z+1	; 0x01
 666:	82 81       	ldd	r24, Z+2	; 0x02
 668:	93 81       	ldd	r25, Z+3	; 0x03
 66a:	0c 5f       	subi	r16, 0xFC	; 252
 66c:	1f 4f       	sbci	r17, 0xFF	; 255
 66e:	08 c0       	rjmp	.+16     	; 0x680 <vfprintf+0x214>
 670:	60 81       	ld	r22, Z
 672:	71 81       	ldd	r23, Z+1	; 0x01
 674:	07 2e       	mov	r0, r23
 676:	00 0c       	add	r0, r0
 678:	88 0b       	sbc	r24, r24
 67a:	99 0b       	sbc	r25, r25
 67c:	0e 5f       	subi	r16, 0xFE	; 254
 67e:	1f 4f       	sbci	r17, 0xFF	; 255
 680:	f3 2d       	mov	r31, r3
 682:	ff 76       	andi	r31, 0x6F	; 111
 684:	3f 2e       	mov	r3, r31
 686:	97 ff       	sbrs	r25, 7
 688:	09 c0       	rjmp	.+18     	; 0x69c <vfprintf+0x230>
 68a:	90 95       	com	r25
 68c:	80 95       	com	r24
 68e:	70 95       	com	r23
 690:	61 95       	neg	r22
 692:	7f 4f       	sbci	r23, 0xFF	; 255
 694:	8f 4f       	sbci	r24, 0xFF	; 255
 696:	9f 4f       	sbci	r25, 0xFF	; 255
 698:	f0 68       	ori	r31, 0x80	; 128
 69a:	3f 2e       	mov	r3, r31
 69c:	2a e0       	ldi	r18, 0x0A	; 10
 69e:	30 e0       	ldi	r19, 0x00	; 0
 6a0:	a3 01       	movw	r20, r6
 6a2:	33 d1       	rcall	.+614    	; 0x90a <__ultoa_invert>
 6a4:	88 2e       	mov	r8, r24
 6a6:	86 18       	sub	r8, r6
 6a8:	44 c0       	rjmp	.+136    	; 0x732 <vfprintf+0x2c6>
 6aa:	85 37       	cpi	r24, 0x75	; 117
 6ac:	31 f4       	brne	.+12     	; 0x6ba <vfprintf+0x24e>
 6ae:	23 2d       	mov	r18, r3
 6b0:	2f 7e       	andi	r18, 0xEF	; 239
 6b2:	b2 2e       	mov	r11, r18
 6b4:	2a e0       	ldi	r18, 0x0A	; 10
 6b6:	30 e0       	ldi	r19, 0x00	; 0
 6b8:	25 c0       	rjmp	.+74     	; 0x704 <vfprintf+0x298>
 6ba:	93 2d       	mov	r25, r3
 6bc:	99 7f       	andi	r25, 0xF9	; 249
 6be:	b9 2e       	mov	r11, r25
 6c0:	8f 36       	cpi	r24, 0x6F	; 111
 6c2:	c1 f0       	breq	.+48     	; 0x6f4 <vfprintf+0x288>
 6c4:	18 f4       	brcc	.+6      	; 0x6cc <vfprintf+0x260>
 6c6:	88 35       	cpi	r24, 0x58	; 88
 6c8:	79 f0       	breq	.+30     	; 0x6e8 <vfprintf+0x27c>
 6ca:	ae c0       	rjmp	.+348    	; 0x828 <vfprintf+0x3bc>
 6cc:	80 37       	cpi	r24, 0x70	; 112
 6ce:	19 f0       	breq	.+6      	; 0x6d6 <vfprintf+0x26a>
 6d0:	88 37       	cpi	r24, 0x78	; 120
 6d2:	21 f0       	breq	.+8      	; 0x6dc <vfprintf+0x270>
 6d4:	a9 c0       	rjmp	.+338    	; 0x828 <vfprintf+0x3bc>
 6d6:	e9 2f       	mov	r30, r25
 6d8:	e0 61       	ori	r30, 0x10	; 16
 6da:	be 2e       	mov	r11, r30
 6dc:	b4 fe       	sbrs	r11, 4
 6de:	0d c0       	rjmp	.+26     	; 0x6fa <vfprintf+0x28e>
 6e0:	fb 2d       	mov	r31, r11
 6e2:	f4 60       	ori	r31, 0x04	; 4
 6e4:	bf 2e       	mov	r11, r31
 6e6:	09 c0       	rjmp	.+18     	; 0x6fa <vfprintf+0x28e>
 6e8:	34 fe       	sbrs	r3, 4
 6ea:	0a c0       	rjmp	.+20     	; 0x700 <vfprintf+0x294>
 6ec:	29 2f       	mov	r18, r25
 6ee:	26 60       	ori	r18, 0x06	; 6
 6f0:	b2 2e       	mov	r11, r18
 6f2:	06 c0       	rjmp	.+12     	; 0x700 <vfprintf+0x294>
 6f4:	28 e0       	ldi	r18, 0x08	; 8
 6f6:	30 e0       	ldi	r19, 0x00	; 0
 6f8:	05 c0       	rjmp	.+10     	; 0x704 <vfprintf+0x298>
 6fa:	20 e1       	ldi	r18, 0x10	; 16
 6fc:	30 e0       	ldi	r19, 0x00	; 0
 6fe:	02 c0       	rjmp	.+4      	; 0x704 <vfprintf+0x298>
 700:	20 e1       	ldi	r18, 0x10	; 16
 702:	32 e0       	ldi	r19, 0x02	; 2
 704:	f8 01       	movw	r30, r16
 706:	b7 fe       	sbrs	r11, 7
 708:	07 c0       	rjmp	.+14     	; 0x718 <vfprintf+0x2ac>
 70a:	60 81       	ld	r22, Z
 70c:	71 81       	ldd	r23, Z+1	; 0x01
 70e:	82 81       	ldd	r24, Z+2	; 0x02
 710:	93 81       	ldd	r25, Z+3	; 0x03
 712:	0c 5f       	subi	r16, 0xFC	; 252
 714:	1f 4f       	sbci	r17, 0xFF	; 255
 716:	06 c0       	rjmp	.+12     	; 0x724 <vfprintf+0x2b8>
 718:	60 81       	ld	r22, Z
 71a:	71 81       	ldd	r23, Z+1	; 0x01
 71c:	80 e0       	ldi	r24, 0x00	; 0
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	0e 5f       	subi	r16, 0xFE	; 254
 722:	1f 4f       	sbci	r17, 0xFF	; 255
 724:	a3 01       	movw	r20, r6
 726:	f1 d0       	rcall	.+482    	; 0x90a <__ultoa_invert>
 728:	88 2e       	mov	r8, r24
 72a:	86 18       	sub	r8, r6
 72c:	fb 2d       	mov	r31, r11
 72e:	ff 77       	andi	r31, 0x7F	; 127
 730:	3f 2e       	mov	r3, r31
 732:	36 fe       	sbrs	r3, 6
 734:	0d c0       	rjmp	.+26     	; 0x750 <vfprintf+0x2e4>
 736:	23 2d       	mov	r18, r3
 738:	2e 7f       	andi	r18, 0xFE	; 254
 73a:	a2 2e       	mov	r10, r18
 73c:	89 14       	cp	r8, r9
 73e:	58 f4       	brcc	.+22     	; 0x756 <vfprintf+0x2ea>
 740:	34 fe       	sbrs	r3, 4
 742:	0b c0       	rjmp	.+22     	; 0x75a <vfprintf+0x2ee>
 744:	32 fc       	sbrc	r3, 2
 746:	09 c0       	rjmp	.+18     	; 0x75a <vfprintf+0x2ee>
 748:	83 2d       	mov	r24, r3
 74a:	8e 7e       	andi	r24, 0xEE	; 238
 74c:	a8 2e       	mov	r10, r24
 74e:	05 c0       	rjmp	.+10     	; 0x75a <vfprintf+0x2ee>
 750:	b8 2c       	mov	r11, r8
 752:	a3 2c       	mov	r10, r3
 754:	03 c0       	rjmp	.+6      	; 0x75c <vfprintf+0x2f0>
 756:	b8 2c       	mov	r11, r8
 758:	01 c0       	rjmp	.+2      	; 0x75c <vfprintf+0x2f0>
 75a:	b9 2c       	mov	r11, r9
 75c:	a4 fe       	sbrs	r10, 4
 75e:	0f c0       	rjmp	.+30     	; 0x77e <vfprintf+0x312>
 760:	fe 01       	movw	r30, r28
 762:	e8 0d       	add	r30, r8
 764:	f1 1d       	adc	r31, r1
 766:	80 81       	ld	r24, Z
 768:	80 33       	cpi	r24, 0x30	; 48
 76a:	21 f4       	brne	.+8      	; 0x774 <vfprintf+0x308>
 76c:	9a 2d       	mov	r25, r10
 76e:	99 7e       	andi	r25, 0xE9	; 233
 770:	a9 2e       	mov	r10, r25
 772:	09 c0       	rjmp	.+18     	; 0x786 <vfprintf+0x31a>
 774:	a2 fe       	sbrs	r10, 2
 776:	06 c0       	rjmp	.+12     	; 0x784 <vfprintf+0x318>
 778:	b3 94       	inc	r11
 77a:	b3 94       	inc	r11
 77c:	04 c0       	rjmp	.+8      	; 0x786 <vfprintf+0x31a>
 77e:	8a 2d       	mov	r24, r10
 780:	86 78       	andi	r24, 0x86	; 134
 782:	09 f0       	breq	.+2      	; 0x786 <vfprintf+0x31a>
 784:	b3 94       	inc	r11
 786:	a3 fc       	sbrc	r10, 3
 788:	10 c0       	rjmp	.+32     	; 0x7aa <vfprintf+0x33e>
 78a:	a0 fe       	sbrs	r10, 0
 78c:	06 c0       	rjmp	.+12     	; 0x79a <vfprintf+0x32e>
 78e:	b2 14       	cp	r11, r2
 790:	80 f4       	brcc	.+32     	; 0x7b2 <vfprintf+0x346>
 792:	28 0c       	add	r2, r8
 794:	92 2c       	mov	r9, r2
 796:	9b 18       	sub	r9, r11
 798:	0d c0       	rjmp	.+26     	; 0x7b4 <vfprintf+0x348>
 79a:	b2 14       	cp	r11, r2
 79c:	58 f4       	brcc	.+22     	; 0x7b4 <vfprintf+0x348>
 79e:	b6 01       	movw	r22, r12
 7a0:	80 e2       	ldi	r24, 0x20	; 32
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	76 d0       	rcall	.+236    	; 0x892 <fputc>
 7a6:	b3 94       	inc	r11
 7a8:	f8 cf       	rjmp	.-16     	; 0x79a <vfprintf+0x32e>
 7aa:	b2 14       	cp	r11, r2
 7ac:	18 f4       	brcc	.+6      	; 0x7b4 <vfprintf+0x348>
 7ae:	2b 18       	sub	r2, r11
 7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <vfprintf+0x34a>
 7b2:	98 2c       	mov	r9, r8
 7b4:	21 2c       	mov	r2, r1
 7b6:	a4 fe       	sbrs	r10, 4
 7b8:	0f c0       	rjmp	.+30     	; 0x7d8 <vfprintf+0x36c>
 7ba:	b6 01       	movw	r22, r12
 7bc:	80 e3       	ldi	r24, 0x30	; 48
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	68 d0       	rcall	.+208    	; 0x892 <fputc>
 7c2:	a2 fe       	sbrs	r10, 2
 7c4:	16 c0       	rjmp	.+44     	; 0x7f2 <vfprintf+0x386>
 7c6:	a1 fc       	sbrc	r10, 1
 7c8:	03 c0       	rjmp	.+6      	; 0x7d0 <vfprintf+0x364>
 7ca:	88 e7       	ldi	r24, 0x78	; 120
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <vfprintf+0x368>
 7d0:	88 e5       	ldi	r24, 0x58	; 88
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	b6 01       	movw	r22, r12
 7d6:	0c c0       	rjmp	.+24     	; 0x7f0 <vfprintf+0x384>
 7d8:	8a 2d       	mov	r24, r10
 7da:	86 78       	andi	r24, 0x86	; 134
 7dc:	51 f0       	breq	.+20     	; 0x7f2 <vfprintf+0x386>
 7de:	a1 fe       	sbrs	r10, 1
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <vfprintf+0x37a>
 7e2:	8b e2       	ldi	r24, 0x2B	; 43
 7e4:	01 c0       	rjmp	.+2      	; 0x7e8 <vfprintf+0x37c>
 7e6:	80 e2       	ldi	r24, 0x20	; 32
 7e8:	a7 fc       	sbrc	r10, 7
 7ea:	8d e2       	ldi	r24, 0x2D	; 45
 7ec:	b6 01       	movw	r22, r12
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	50 d0       	rcall	.+160    	; 0x892 <fputc>
 7f2:	89 14       	cp	r8, r9
 7f4:	30 f4       	brcc	.+12     	; 0x802 <vfprintf+0x396>
 7f6:	b6 01       	movw	r22, r12
 7f8:	80 e3       	ldi	r24, 0x30	; 48
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	4a d0       	rcall	.+148    	; 0x892 <fputc>
 7fe:	9a 94       	dec	r9
 800:	f8 cf       	rjmp	.-16     	; 0x7f2 <vfprintf+0x386>
 802:	8a 94       	dec	r8
 804:	f3 01       	movw	r30, r6
 806:	e8 0d       	add	r30, r8
 808:	f1 1d       	adc	r31, r1
 80a:	80 81       	ld	r24, Z
 80c:	b6 01       	movw	r22, r12
 80e:	90 e0       	ldi	r25, 0x00	; 0
 810:	40 d0       	rcall	.+128    	; 0x892 <fputc>
 812:	81 10       	cpse	r8, r1
 814:	f6 cf       	rjmp	.-20     	; 0x802 <vfprintf+0x396>
 816:	22 20       	and	r2, r2
 818:	09 f4       	brne	.+2      	; 0x81c <vfprintf+0x3b0>
 81a:	4e ce       	rjmp	.-868    	; 0x4b8 <vfprintf+0x4c>
 81c:	b6 01       	movw	r22, r12
 81e:	80 e2       	ldi	r24, 0x20	; 32
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	37 d0       	rcall	.+110    	; 0x892 <fputc>
 824:	2a 94       	dec	r2
 826:	f7 cf       	rjmp	.-18     	; 0x816 <vfprintf+0x3aa>
 828:	f6 01       	movw	r30, r12
 82a:	86 81       	ldd	r24, Z+6	; 0x06
 82c:	97 81       	ldd	r25, Z+7	; 0x07
 82e:	02 c0       	rjmp	.+4      	; 0x834 <vfprintf+0x3c8>
 830:	8f ef       	ldi	r24, 0xFF	; 255
 832:	9f ef       	ldi	r25, 0xFF	; 255
 834:	2b 96       	adiw	r28, 0x0b	; 11
 836:	0f b6       	in	r0, 0x3f	; 63
 838:	f8 94       	cli
 83a:	de bf       	out	0x3e, r29	; 62
 83c:	0f be       	out	0x3f, r0	; 63
 83e:	cd bf       	out	0x3d, r28	; 61
 840:	df 91       	pop	r29
 842:	cf 91       	pop	r28
 844:	1f 91       	pop	r17
 846:	0f 91       	pop	r16
 848:	ff 90       	pop	r15
 84a:	ef 90       	pop	r14
 84c:	df 90       	pop	r13
 84e:	cf 90       	pop	r12
 850:	bf 90       	pop	r11
 852:	af 90       	pop	r10
 854:	9f 90       	pop	r9
 856:	8f 90       	pop	r8
 858:	7f 90       	pop	r7
 85a:	6f 90       	pop	r6
 85c:	5f 90       	pop	r5
 85e:	4f 90       	pop	r4
 860:	3f 90       	pop	r3
 862:	2f 90       	pop	r2
 864:	08 95       	ret

00000866 <strnlen_P>:
 866:	fc 01       	movw	r30, r24
 868:	05 90       	lpm	r0, Z+
 86a:	61 50       	subi	r22, 0x01	; 1
 86c:	70 40       	sbci	r23, 0x00	; 0
 86e:	01 10       	cpse	r0, r1
 870:	d8 f7       	brcc	.-10     	; 0x868 <strnlen_P+0x2>
 872:	80 95       	com	r24
 874:	90 95       	com	r25
 876:	8e 0f       	add	r24, r30
 878:	9f 1f       	adc	r25, r31
 87a:	08 95       	ret

0000087c <strnlen>:
 87c:	fc 01       	movw	r30, r24
 87e:	61 50       	subi	r22, 0x01	; 1
 880:	70 40       	sbci	r23, 0x00	; 0
 882:	01 90       	ld	r0, Z+
 884:	01 10       	cpse	r0, r1
 886:	d8 f7       	brcc	.-10     	; 0x87e <strnlen+0x2>
 888:	80 95       	com	r24
 88a:	90 95       	com	r25
 88c:	8e 0f       	add	r24, r30
 88e:	9f 1f       	adc	r25, r31
 890:	08 95       	ret

00000892 <fputc>:
 892:	0f 93       	push	r16
 894:	1f 93       	push	r17
 896:	cf 93       	push	r28
 898:	df 93       	push	r29
 89a:	fb 01       	movw	r30, r22
 89c:	23 81       	ldd	r18, Z+3	; 0x03
 89e:	21 fd       	sbrc	r18, 1
 8a0:	03 c0       	rjmp	.+6      	; 0x8a8 <fputc+0x16>
 8a2:	8f ef       	ldi	r24, 0xFF	; 255
 8a4:	9f ef       	ldi	r25, 0xFF	; 255
 8a6:	2c c0       	rjmp	.+88     	; 0x900 <fputc+0x6e>
 8a8:	22 ff       	sbrs	r18, 2
 8aa:	16 c0       	rjmp	.+44     	; 0x8d8 <fputc+0x46>
 8ac:	46 81       	ldd	r20, Z+6	; 0x06
 8ae:	57 81       	ldd	r21, Z+7	; 0x07
 8b0:	24 81       	ldd	r18, Z+4	; 0x04
 8b2:	35 81       	ldd	r19, Z+5	; 0x05
 8b4:	42 17       	cp	r20, r18
 8b6:	53 07       	cpc	r21, r19
 8b8:	44 f4       	brge	.+16     	; 0x8ca <fputc+0x38>
 8ba:	a0 81       	ld	r26, Z
 8bc:	b1 81       	ldd	r27, Z+1	; 0x01
 8be:	9d 01       	movw	r18, r26
 8c0:	2f 5f       	subi	r18, 0xFF	; 255
 8c2:	3f 4f       	sbci	r19, 0xFF	; 255
 8c4:	31 83       	std	Z+1, r19	; 0x01
 8c6:	20 83       	st	Z, r18
 8c8:	8c 93       	st	X, r24
 8ca:	26 81       	ldd	r18, Z+6	; 0x06
 8cc:	37 81       	ldd	r19, Z+7	; 0x07
 8ce:	2f 5f       	subi	r18, 0xFF	; 255
 8d0:	3f 4f       	sbci	r19, 0xFF	; 255
 8d2:	37 83       	std	Z+7, r19	; 0x07
 8d4:	26 83       	std	Z+6, r18	; 0x06
 8d6:	14 c0       	rjmp	.+40     	; 0x900 <fputc+0x6e>
 8d8:	8b 01       	movw	r16, r22
 8da:	ec 01       	movw	r28, r24
 8dc:	fb 01       	movw	r30, r22
 8de:	00 84       	ldd	r0, Z+8	; 0x08
 8e0:	f1 85       	ldd	r31, Z+9	; 0x09
 8e2:	e0 2d       	mov	r30, r0
 8e4:	09 95       	icall
 8e6:	89 2b       	or	r24, r25
 8e8:	e1 f6       	brne	.-72     	; 0x8a2 <fputc+0x10>
 8ea:	d8 01       	movw	r26, r16
 8ec:	16 96       	adiw	r26, 0x06	; 6
 8ee:	8d 91       	ld	r24, X+
 8f0:	9c 91       	ld	r25, X
 8f2:	17 97       	sbiw	r26, 0x07	; 7
 8f4:	01 96       	adiw	r24, 0x01	; 1
 8f6:	17 96       	adiw	r26, 0x07	; 7
 8f8:	9c 93       	st	X, r25
 8fa:	8e 93       	st	-X, r24
 8fc:	16 97       	sbiw	r26, 0x06	; 6
 8fe:	ce 01       	movw	r24, r28
 900:	df 91       	pop	r29
 902:	cf 91       	pop	r28
 904:	1f 91       	pop	r17
 906:	0f 91       	pop	r16
 908:	08 95       	ret

0000090a <__ultoa_invert>:
 90a:	fa 01       	movw	r30, r20
 90c:	aa 27       	eor	r26, r26
 90e:	28 30       	cpi	r18, 0x08	; 8
 910:	51 f1       	breq	.+84     	; 0x966 <__ultoa_invert+0x5c>
 912:	20 31       	cpi	r18, 0x10	; 16
 914:	81 f1       	breq	.+96     	; 0x976 <__ultoa_invert+0x6c>
 916:	e8 94       	clt
 918:	6f 93       	push	r22
 91a:	6e 7f       	andi	r22, 0xFE	; 254
 91c:	6e 5f       	subi	r22, 0xFE	; 254
 91e:	7f 4f       	sbci	r23, 0xFF	; 255
 920:	8f 4f       	sbci	r24, 0xFF	; 255
 922:	9f 4f       	sbci	r25, 0xFF	; 255
 924:	af 4f       	sbci	r26, 0xFF	; 255
 926:	b1 e0       	ldi	r27, 0x01	; 1
 928:	3e d0       	rcall	.+124    	; 0x9a6 <__ultoa_invert+0x9c>
 92a:	b4 e0       	ldi	r27, 0x04	; 4
 92c:	3c d0       	rcall	.+120    	; 0x9a6 <__ultoa_invert+0x9c>
 92e:	67 0f       	add	r22, r23
 930:	78 1f       	adc	r23, r24
 932:	89 1f       	adc	r24, r25
 934:	9a 1f       	adc	r25, r26
 936:	a1 1d       	adc	r26, r1
 938:	68 0f       	add	r22, r24
 93a:	79 1f       	adc	r23, r25
 93c:	8a 1f       	adc	r24, r26
 93e:	91 1d       	adc	r25, r1
 940:	a1 1d       	adc	r26, r1
 942:	6a 0f       	add	r22, r26
 944:	71 1d       	adc	r23, r1
 946:	81 1d       	adc	r24, r1
 948:	91 1d       	adc	r25, r1
 94a:	a1 1d       	adc	r26, r1
 94c:	20 d0       	rcall	.+64     	; 0x98e <__ultoa_invert+0x84>
 94e:	09 f4       	brne	.+2      	; 0x952 <__ultoa_invert+0x48>
 950:	68 94       	set
 952:	3f 91       	pop	r19
 954:	2a e0       	ldi	r18, 0x0A	; 10
 956:	26 9f       	mul	r18, r22
 958:	11 24       	eor	r1, r1
 95a:	30 19       	sub	r19, r0
 95c:	30 5d       	subi	r19, 0xD0	; 208
 95e:	31 93       	st	Z+, r19
 960:	de f6       	brtc	.-74     	; 0x918 <__ultoa_invert+0xe>
 962:	cf 01       	movw	r24, r30
 964:	08 95       	ret
 966:	46 2f       	mov	r20, r22
 968:	47 70       	andi	r20, 0x07	; 7
 96a:	40 5d       	subi	r20, 0xD0	; 208
 96c:	41 93       	st	Z+, r20
 96e:	b3 e0       	ldi	r27, 0x03	; 3
 970:	0f d0       	rcall	.+30     	; 0x990 <__ultoa_invert+0x86>
 972:	c9 f7       	brne	.-14     	; 0x966 <__ultoa_invert+0x5c>
 974:	f6 cf       	rjmp	.-20     	; 0x962 <__ultoa_invert+0x58>
 976:	46 2f       	mov	r20, r22
 978:	4f 70       	andi	r20, 0x0F	; 15
 97a:	40 5d       	subi	r20, 0xD0	; 208
 97c:	4a 33       	cpi	r20, 0x3A	; 58
 97e:	18 f0       	brcs	.+6      	; 0x986 <__ultoa_invert+0x7c>
 980:	49 5d       	subi	r20, 0xD9	; 217
 982:	31 fd       	sbrc	r19, 1
 984:	40 52       	subi	r20, 0x20	; 32
 986:	41 93       	st	Z+, r20
 988:	02 d0       	rcall	.+4      	; 0x98e <__ultoa_invert+0x84>
 98a:	a9 f7       	brne	.-22     	; 0x976 <__ultoa_invert+0x6c>
 98c:	ea cf       	rjmp	.-44     	; 0x962 <__ultoa_invert+0x58>
 98e:	b4 e0       	ldi	r27, 0x04	; 4
 990:	a6 95       	lsr	r26
 992:	97 95       	ror	r25
 994:	87 95       	ror	r24
 996:	77 95       	ror	r23
 998:	67 95       	ror	r22
 99a:	ba 95       	dec	r27
 99c:	c9 f7       	brne	.-14     	; 0x990 <__ultoa_invert+0x86>
 99e:	00 97       	sbiw	r24, 0x00	; 0
 9a0:	61 05       	cpc	r22, r1
 9a2:	71 05       	cpc	r23, r1
 9a4:	08 95       	ret
 9a6:	9b 01       	movw	r18, r22
 9a8:	ac 01       	movw	r20, r24
 9aa:	0a 2e       	mov	r0, r26
 9ac:	06 94       	lsr	r0
 9ae:	57 95       	ror	r21
 9b0:	47 95       	ror	r20
 9b2:	37 95       	ror	r19
 9b4:	27 95       	ror	r18
 9b6:	ba 95       	dec	r27
 9b8:	c9 f7       	brne	.-14     	; 0x9ac <__ultoa_invert+0xa2>
 9ba:	62 0f       	add	r22, r18
 9bc:	73 1f       	adc	r23, r19
 9be:	84 1f       	adc	r24, r20
 9c0:	95 1f       	adc	r25, r21
 9c2:	a0 1d       	adc	r26, r0
 9c4:	08 95       	ret

000009c6 <_exit>:
 9c6:	f8 94       	cli

000009c8 <__stop_program>:
 9c8:	ff cf       	rjmp	.-2      	; 0x9c8 <__stop_program>
